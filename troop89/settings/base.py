#  Copyright (c) 2018, 2019 Brian Schubert
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.

"""
Django settings for troop89 project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import json
import os

from django.urls import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

_secrets_default = os.path.join(BASE_DIR, '../.secrets.json')

# Load local settings that we don't like to talk about
with open(os.getenv('DJANGO_SETTINGS_SECRETS', _secrets_default)) as secrets_file:
    SECRETS = json.load(secrets_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECRETS['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
# We'll leave this off for now. It's set explicitly on in the development profile.
DEBUG = False

# To be set explicitly in dev/prod profiles.
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    # Internal apps
    'troop89.auth.apps.AuthConfig',
    'troop89.events.apps.EventsConfig',
    'troop89.date_range.apps.DateRangeConfig',
    'troop89.trooporg.apps.TroopOrgConfig',
    'troop89.announcements.apps.AnnouncementsConfig',
    'troop89.flatpages.apps.FlatpagesConfig',

    # Third party apps
    'markdownx',
    'cspreports',
    'django_referrer_policy',
    'ckeditor',
    'django_json_ld',

    # Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.flatpages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
    'django_referrer_policy.middleware.ReferrerPolicyMiddleware',
    'troop89.flatpages.middleware.HierarchicalFlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'troop89.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "../templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'troop89.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = SECRETS['DATABASES']

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "../static")

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "../assets"),
)

# User auth model
AUTH_USER_MODEL = 'troop89_auth.User'

# Django sites config

SITE_ID = 1

# Admin site branding
ADMIN_SITE_TITLE = 'Troop89 site administration'
ADMIN_SITE_HEADER = 'Troop89 administration'

# Markdownx config
# Documentation available at https://neutronx.github.io/django-markdownx/
# See https://python-markdown.github.io/extensions/ for available Markdown extensions
MARKDOWNX_MARKDOWN_EXTENSIONS = [
    'tables',
    'fenced_code',
    'sane_lists',
]

# SecurityMiddleware settings
# See production profile for further HSTS settings and redirection.

SECURE_BROWSER_XSS_FILTER = True

SECURE_CONTENT_TYPE_NOSNIFF = True

# Configuration for site Content Security Policy
# Content security policy reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
# django-csp repo: https://github.com/mozilla/django-csp
#
# Note: We use the Mozzila's middleware from the django-csp package to send
# csp headers. We use a third-party package (django-csp-reports) to handle
# csp policy violation reports.

CSP_DEFAULT_SRC = ("'self'",)

CSP_SCRIPT_SRC = ("'self'",)

CSP_STYLE_SRC = ("'self'",)

# Allow arbitrary host to serve images (for user convenience)
CSP_IMG_SRC = ('*',)

# URI that CSP violations are to be sent to
# reverse url for view provided by django-csp-reports
CSP_REPORT_URI = reverse_lazy('report_csp')

# django-csp-reports config

CSP_REPORTS_EMAIL_ADMINS = False

CSP_REPORTS_LOG = True

CSP_REPORTS_LOG_LEVEL = 'warning'

CSP_REPORTS_SAVE = True

# ReferrerPolicyMiddleware settings

REFERRER_POLICY = 'no-referrer-when-downgrade'

# django-ckeditor config
#
# See https://github.com/django-ckeditor/django-ckeditor#optional-customizing-ckeditor-editor
# for further details on how to configure the ckeditor django app.
#
# See https://ckeditor.com/docs/ckeditor4/latest/guide/dev_toolbar.html for
# details on how to customize the ckeditor toolbar.

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'toolbarGroups': [
            {'name': 'document', 'groups': ['mode', 'document', 'doctools']},
            {'name': 'clipboard', 'groups': ['clipboard', 'undo']},
            {'name': 'editing', 'groups': ['find', 'selection', 'spellchecker', 'editing']},
            {'name': 'forms', 'groups': ['forms']},
            {'name': 'links', 'groups': ['links']},
            {'name': 'insert', 'groups': ['insert']},
            {'name': 'tools', 'groups': ['tools']},
            {'name': 'about', 'groups': ['about']},
            '/',
            {'name': 'styles', 'groups': ['styles']},
            {'name': 'colors', 'groups': ['colors']},
            {'name': 'basicstyles', 'groups': ['basicstyles', 'cleanup']},
            {'name': 'paragraph', 'groups': ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']},
            '/',
            {'name': 'others', 'groups': ['others']},
        ],

        'removeButtons': ','.join([
            # Remove document tools
            'Save',
            'NewPage',
            'Preview',
            'Print',
            'Cut',
            'PasteFromWord',
            'PasteText',
            'Paste',
            'Copy',
            # Remove language support tools
            'BidiLtr',
            'BidiRtl',
            'Language',
            # Remove Flash plugin insert
            'Flash',
            'PageBreak',
            # Remove font face and size customization tools
            'Font',
            'FontSize',
            # Remove html form insert tools
            'Form',
            'TextField',
            'Textarea',
            'Select',
            'Button',
            'ImageButton',
            'HiddenField',
            'Radio'
        ])
    }
}
